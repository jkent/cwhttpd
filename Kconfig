#ESP-IDF Kconfig configuration file.
menu "libesphttpd"

choice
	prompt "Log level"
	default EHTTPD_LOG_LEVEL_WARNING

config EHTTPD_LOG_LEVEL_NONE
	bool "None"

config EHTTPD_LOG_LEVEL_ERROR
	bool "Error"

config EHTTPD_LOG_LEVEL_WARNING
	bool "Warning"

config EHTTPD_LOG_LEVEL_INFO
	bool "Info"

config EHTTPD_LOG_LEVEL_DEBUG
	bool "Debug"

config EHTTPD_LOG_LEVEL_VERBOSE
	bool "Verbose"

endchoice # "Log level"

config EHTTPD_DEFAULT_STACK_SIZE
	int "Default task stack size"
	range 1024 65535
	default 8192
	help
		Stack size reserved for the esphttpd task and route handlers.

config EHTTPD_DEFAULT_USE_AFFINITY
	bool "Enable affinity per task default"
	default n
	help
		Enable processor affinity Support

config EHTTPD_DEFAULT_AFFINITY
	int "Core number for processor affinity"
        depends on EHTTPD_DEFAULT_USE_AFFINITY
	range 0 1
	default 0
	help
		Select core 0 or core 1

config EHTTPD_DEFAULT_PRIORITY
	int "Process Task Priority"
	range 1 31
	default 4
	help
		Set libesphttpd Process Task Priority

config EHTTPD_RECVBUF_SIZE
	int "Max recv buffer size"
	default 2048
	help
		This is statically allocated per server instance.

config EHTTPD_SENDBUF_SIZE
	int "Max send buffer size"
	default 2048
	help
		This is statically allocated per connection.

config EHTTPD_MAX_REQUEST_SIZE
	int "Max length of request headers"
	default 1024
	help
	    This is statically allocated per connection.

config EHTTPD_LISTEN_BACKLOG
	int "Listen backlog"
	default 2
	help
		How many connections that can be waiting in the listen queue.

config EHTTPD_USE_SHUTDOWN
	bool "Enable shutdown support"
	default n
	help
		Add support for server shutdown. Adds ~500 bytes of code.

config EHTTPD_DEFAULT_CLOSE
	bool "Default to closing connections"
	default n

config EHTTPD_ENABLE_CORS
	bool "Enable CORS support"
	default n

if EHTTPD_ENABLE_CORS

config EHTTPD_CORS_ORIGIN
	string "CORS origin"
	default "*"
	help
		CORS allowed origin.

config EHTTPD_CORS_METHODS
	string "CORS methods"
	default "GET,PUT,POST,DELETE,OPTIONS"
	help
		CORS allowed HTTP methods.

endif # EHTTPD_ENABLE_CORS

config EHTTPD_TCP_NODELAY
	bool "Set TCP_NODELAY"
	default y
	help
		Set TCP_NODELAY to avoid waiting for a ACK to send multiple small
		frames (It will disable Nagle's TCP Algorithm).  It can speed-up
		transfers for small files.

choice
	prompt "TLS Support"
	default EHTTPD_TLS_DISABLED
	help
		Enabling this allows the server to accept TLS connections.

config EHTTPD_TLS_DISABLED
	bool "Disabled"

config EHTTPD_TLS_MBEDTLS
	bool "Use MbedTLS"

config EHTTPD_TLS_OPENSSL
	bool "Use OpenSSL"
	help
		OpenSSL connections require ~32k of ram each.

endchoice

config EHTTPD_FW_OTA_FACTORY
	bool "Allow OTA of factory partition"
	default n
	help
		Allows ehttpd_route_fw_upload() in route_flash.c to write to the
		factory partition.  It it not recommended for production use.

endmenu
